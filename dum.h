/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _DUM_H_RPCGEN
#define _DUM_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct X_arr {
	struct {
		u_int X_len;
		int *X_val;
	} X;
	int X_size;
};
typedef struct X_arr X_arr;

struct max_min {
	int max;
	int min;
};
typedef struct max_min max_min;

struct X_times_r {
	struct {
		u_int X_len;
		int *X_val;
	} X;
	int X_size;
	float r;
};
typedef struct X_times_r X_times_r;

struct prod {
	struct {
		u_int prod_len;
		float *prod_val;
	} prod;
};
typedef struct prod prod;

#define DUM_PROG 0x23451111
#define DUM_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define average 1
extern  float * average_1(X_arr *, CLIENT *);
extern  float * average_1_svc(X_arr *, struct svc_req *);
#define max_and_min 2
extern  max_min * max_and_min_1(X_arr *, CLIENT *);
extern  max_min * max_and_min_1_svc(X_arr *, struct svc_req *);
#define product 3
extern  prod * product_1(X_times_r *, CLIENT *);
extern  prod * product_1_svc(X_times_r *, struct svc_req *);
extern int dum_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define average 1
extern  float * average_1();
extern  float * average_1_svc();
#define max_and_min 2
extern  max_min * max_and_min_1();
extern  max_min * max_and_min_1_svc();
#define product 3
extern  prod * product_1();
extern  prod * product_1_svc();
extern int dum_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_X_arr (XDR *, X_arr*);
extern  bool_t xdr_max_min (XDR *, max_min*);
extern  bool_t xdr_X_times_r (XDR *, X_times_r*);
extern  bool_t xdr_prod (XDR *, prod*);

#else /* K&R C */
extern bool_t xdr_X_arr ();
extern bool_t xdr_max_min ();
extern bool_t xdr_X_times_r ();
extern bool_t xdr_prod ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_DUM_H_RPCGEN */
